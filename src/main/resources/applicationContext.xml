<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd   
    http://www.springframework.org/schema/aop   
    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd   
    http://www.springframework.org/schema/tx    
    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd   
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context-2.5.xsd">  
  
<!-- 自动扫描与装配bean -->  
<context:component-scan base-package="com.tgb.oa"></context:component-scan>  
  
<!-- 导入外部的properties文件 -->  
   <context:property-placeholder location="classpath:jdbc.properties"/>  
      
<!-- 配置sessionFactory,将Hibernate中的事务交给spring管理 -->  
   <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">  
           
          <!-- 配置数据库连接池,指定sessionFactory中的数据源 -->  
          <property name="dataSource">  
            <bean class="com.mchange.v2.c3p0.ComboPooledDataSource">  
            <!-- 数据库连接信息 -->  
            <property name="jdbcUrl" value="${mysqlUrl}"></property>  
            <property name="driverClass" value="${classDriver}"></property>  
            <property name="user" value="${mysqlUsername}"></property>  
            <property name="password" value="${mysqlPassword}"></property>  
                  
            <!-- 其他配置 -->               
            <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->  
            <property name="initialPoolSize" value="3"></property>  
            <!--连接池中保留的最小连接数。Default: 3 -->  
            <property name="minPoolSize" value="3"></property>  
            <!--连接池中保留的最大连接数。Default: 15 -->  
            <property name="maxPoolSize" value="5"></property>  
            <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
            <property name="acquireIncrement" value="3"></property>  
            <!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->  
            <property name="maxStatements" value="8"></property>  
            <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->  
            <property name="maxStatementsPerConnection" value="5"></property>  
            <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
            <property name="maxIdleTime" value="1800"></property>  
                          
            </bean>  
         </property>  
         <!-- 指定hibernate的属性  -->    
         <property name="hibernateProperties">    
                <value>    
                    <!-- hibernate使用的 方言 -->    
                hibernate.dialect=org.hibernate.dialect.Oracle10gDialect    
                <!-- 根据实体的映射文件生成表结构 -->    
                hibernate.hbm2ddl.auto=update                   
                <!-- 是否打印出sql语句 -->    
                hibernate.show_sql=true
                <!-- 格式化sql -->
                format_sql=true
		 		<!-- 是否使用Unicode编码 -->
		 		connection.useUnicode=true
		 		<!-- 连接数据库使用的字符集编码格式 -->
		 		connection.characterEncoding=utf-8
		 		<!-- 使用方言 -->
		 		hibernate.dialect=org.hibernate.dialect.MySQLDialect
             </value>    
         </property>  
         <!-- Hibernate的映射文件 -->  
         <property name="mappingResources">  
         <list>  
            <value>com/icapcat/domain/InfoEntity.hbm.xml</value>  
         </list>  
         </property>
   </bean>       
   <!-- 配置使用基于Hibernate的事务管理器 -->  
   <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">  
     <!-- 通过sessionfactory开启事务 -->  
     <property name="sessionFactory" ref="sessionFactory"></property>  
   </bean>  
   <!--声明式事务管理(采用注解的方式) -->  
   <tx:annotation-driven transaction-manager="txManager"/>  
</beans>  